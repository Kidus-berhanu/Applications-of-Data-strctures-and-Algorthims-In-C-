#include <iostream>
#include <cmath>

// Define a class to represent the system being modeled
class System {
public:
    // Initialize the system with some initial conditions
    System(double initial_condition) {
        x = initial_condition;
    }

    // Function to perform a time step of the simulation
    void timeStep(double dt) {
        // Perform some calculations to update the state of the system
        x += dt * f(x);
    }

    // Function to retrieve the current state of the system
    double getX() {
        return x;
    }

private:
    double x;

    // Function representing the dynamics of the system
    double f(double x) {
        // Example: return -x for a simple exponential decay
        return -x;
    }
};

int main() {
    // Create an instance of the system with an initial condition of 1
    System system(1);

    // Perform a simulation for 10 time steps
    double dt = 0.1;
    for (int i = 0; i < 10; i++) {
        system.timeStep(dt);
        std::cout << "Time step: " << i+1 << ", x = " << system.getX() << std::endl;
    }

    return 0;
}
